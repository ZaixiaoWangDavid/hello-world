PVector[] snow;
PVector[] snowSpeed;

void setup() {
  size(800, 800);
  snow = new PVector[20];
  snowSpeed = new PVector[20];
  for (int i = 0; i < snow.length; i++) {
    float x = random(0, width);
    float y = random(0, 50);
    snow[i] = new PVector(x, y);
    snowSpeed[i] = new PVector(0, 0);
  }
}

void draw() {
  background(#87CEEB);
  
  // ground
  noStroke ();
  fill(#608038);
  rect(0, height-100, width, 100);
  
  // sun
  noStroke ();
  fill(#FDFD13);
  ellipse(width-100, 150, 130, 130);


for (int i = 0; i < snow.length; i++) {
  snow[i].add(0, 20);
  snow[i].add(snowSpeed[i]);

if (snow[i].y > 400) {
  snow[i].y = - 75;
  snow[i].y = (int) random(0, 100);
 
  noStroke();
    fill(0);
    ellipse(snow[i].x, snow[i].y, 30, 30);
}
}
}

void setup() {
  size(800, 800);
}
void draw() {
  background(#87CEEB);
}

 public void showUI()  {
    Jframe jf = new JFrame();
    jf.setSize(1000, 1000);
    jf.setTitle("Fivechess");
    jf.setDefaultCloseOperation(3);
    jf.add(this);
    this.setBackground(Color.Orange);
    jf.setVisible(true);
    Graphics g = this.getGraphics();
    GameMouse gm = new GameMouse();
    gm.setG(g);
    this.addMouselistener(gm);
  }
  
  
}

public class GameUI extends JPanel implements Config {
  
  public static void main(String[] args) {
    GameUI ui = new GameUI90;
    ui.showUI90;
  }
  
}

public interface Config {
  public static final int X = 300;
  public static final int Y = 300;
  public static final int LINE = 40;
  public static final int SIZE = 40;
  public static final int[] [] chessArray = new int[LINE] [LINE];
}



public interface Config {
  public static final int X = 60;
  public static final int Y = 50;
  public static final int LINE = 15;
  public static final int SIZE = 40;
  public static final int[] [] chessArray = new int[LINE] [SIZE];
}

public class GameUI extends JPanel implements Config {
  
  public static void main(String[] args) {
    GameUI ui = new GameUI();
    ui.showUI();
  }
  public void showUI()  {
    JFrame frame = new JFrame();
    frame.setSize(1000, 1000);
    frame.setTitle("Fivechess");
    frame.setDefaultCloseOperation(3);
    frame.add(this);
    this.setBackground(Color.Orange);
    frame.setVisible(true);
  public void paintComponent(Graphics g)  
    Graphics g = this.getGraphics();
    GameMouse gm = new GameMouse();
    gm.setG(g);
    this.addMouselistener(gm);
  }
  
  public void paint(Graphics g)  {
    super.paint(g);
    for (int i = 0; i < LINE; i ++) {
       g.drawLine(X, Y + 1 * SIZE, X + (LINE - 1) * SIZE, Y + i * SIZE);
       g.drawLine(X + i * SIZE, Y, X + i * SIZE, Y + (LINE - 1) * SIZE);
  }
}

}

